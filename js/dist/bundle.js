!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e.prototype.request=function(e,t){var n=new XMLHttpRequest;n.open("GET",e,!0),n.onreadystatechange=function(){4===n.readyState&&(200===n.status?t(null,n.responseText):t(new Error("Erro na requisição")))},n.send(null)},e.prototype.post=function(e,t,n){var r=new XMLHttpRequest;r.open("POST",e),r.setRequestHeader("Content-Type","application/json"),r.onreadystatechange=function(){4===r.readyState&&(200===r.status?n(null,r.responseText):n(new Error("Erro na requisição")))},r.send(t)},e.prototype.generateDate=function(e){return e.replace(/(\d+)-(\d+)-(\d+)/,"$3-$2-$1")},e.prototype.dateFormatter=function(e){return e?e.slice(0,10).replace(/(\d+)-(\d+)-(\d+)/,"$3-$2-$1"):"SEM DATA"},e}();t.Utils=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Config={SERVER:"http://10.8.66.4/LTSAPI",DEV_SERVER:"http://localhost:59450"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),o=n(0),i=function(){function e(){this.envoirment="production",this.server="production"==this.envoirment?r.Config.SERVER:r.Config.DEV_SERVER,this.utils=new o.Utils}return e.prototype.getActivities=function(){var e=this,t=this.server+"/api/dashboard";return new Promise(function(n,r){e.utils.request(t,function(e,t){e&&r(e);var o=JSON.parse(t);n(o)})})},e.prototype.create=function(){},e.prototype.update=function(){},e.prototype.delete=function(){},e}();t.ActivitieService=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),o=function(){function e(e){this.services=new r.ActivitieService,this.services=new r.ActivitieService,this.window=e}return e.prototype.onLoad=function(){this.services.getActivities().then(function(e){})},e.prototype.generateTable=function(e){console.log(654654);var t=document.querySelector("thead"),n=document.querySelector("tbody");t.innerHTML="",n.innerHTML="",TABLE_CONTENT.forEach(function(e,n){var r=document.createElement("th");r.className="theader",r.textContent=e.header,t.appendChild(r)}),e.map(function(e){var t=document.createElement("tr");TABLE_CONTENT.map(function(e){var n=document.createElement("td");if("handover"==e.field&&(n.textContent=dateFormatter(n.textContent)),"details"==e.field){var r=document.createElement("button");r.setAttribute("data-toggle","modal"),r.setAttribute("data-target","#activity-modal"),r.className="btn btn-primary",r.textContent="VER",n.appendChild(r)}e.field,t.appendChild(n)}),n.appendChild(t)})},e.prototype.generateOptions=function(){},e.prototype.generateFilters=function(){},e}();t.Main=o;new o(window)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,